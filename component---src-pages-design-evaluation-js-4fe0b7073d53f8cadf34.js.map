{"version":3,"sources":["webpack:///./src/components/common/DesignNavbar/style.js","webpack:///./src/components/common/DesignNavbar/DesignNavbar.js","webpack:///./src/components/sections/EvaluationPlan.js","webpack:///./src/components/sections/MethodOfEvaluation.js","webpack:///./src/components/sections/ResultOfEvaluation.js","webpack:///./src/components/sections/KeyChanges.js","webpack:///./src/pages/design-evaluation.js"],"names":["Nav","styled","nav","props","theme","color","secondary","StyledContainer","Container","NavListWrapper","div","mobile","NavItem","li","font","primary","font_size","small","white","regular","MobileMenu","Mobile","screen","md","hide","NAV_ITEMS","reformatLink","item","item_link","toLowerCase","replace","DesignNavbar","state","mobileMenuOpen","toggleMobileMenu","setState","prevState","closeMobileMenu","getNavAnchorLink","href","onClick","getNavList","items","map","currentClassName","navItem","key","render","this","style","Component","EvaluationPlan","id","React","MethodOfEvaluation","ResultOfEvaluation","ExternalLink","className","KeyChanges","DesignEvaluation","Layout","flexDirection","Navbar","paddingTop","Footer"],"mappings":"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","file":"component---src-pages-design-evaluation-js-4fe0b7073d53f8cadf34.js","sourcesContent":["import styled from 'styled-components';\n\nimport { Container } from '@components/global';\n\nexport const Nav = styled.nav`\n  padding: 16px 0;\n  background: ${props => props.theme.color.secondary};\n  position: fixed;\n  height: 5vh;\n  top: 10vh;\n  width: 100%;\n  z-index: 1000;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const NavListWrapper = styled.div`\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: row;\n\n    ${({ mobile }) =>\n      mobile &&\n      `\n        flex-direction: column;\n        margin-top: 1em;\n\n        > ${NavItem} {\n          margin: 0;\n          margin-top: 0.75em;\n        }\n      `};\n  }\n`;\n\nexport const NavItem = styled.li`\n  margin: 0 0.75em;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.font_size.small};\n  font-weight: 500;\n\n  a {\n    text-decoration: none;\n    opacity: 0.6;\n    color: ${props => props.theme.color.white.regular};\n  }\n\n  &.active {\n    a {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const MobileMenu = styled.div`\n  width: 100%;\n  background: ${props => props.theme.color.primary};\n`;\n\nexport const Mobile = styled.div`\n  display: none;\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    display: block;\n  }\n\n  ${props =>\n    props.hide &&\n    `\n    display: block;\n\n    @media (max-width: ${props.theme.screen.md}) {\n      display: none;\n    }\n  `}\n`;\n","import React, { Component } from 'react';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Scrollspy from 'react-scrollspy';\n\nimport { Container } from '@components/global';\nimport {\n  Nav,\n  NavItem,\n  StyledContainer,\n  NavListWrapper,\n  MobileMenu,\n  Mobile,\n} from './style';\n\nimport { ReactComponent as MenuIcon } from '@static/icons/menu.svg';\n\nconst NAV_ITEMS = [\n  'Evaluation Plan',\n  'Method of Evaluation',\n  'Result and Process of User Insight Consideration',\n  'Key Changes',\n];\n\nfunction reformatLink(item) {\n    let item_link = item.toLowerCase().replace(/\\s/g, '-');\n    item_link = item_link.replace(':', '');\n    return item_link;\n}\n\nclass DesignNavbar extends Component {\n  state = {\n    mobileMenuOpen: false,\n  };\n\n  toggleMobileMenu = () => {\n    this.setState(prevState => ({ mobileMenuOpen: !prevState.mobileMenuOpen }));\n  };\n\n  closeMobileMenu = () => {\n    if (this.state.mobileMenuOpen) {\n      this.setState({ mobileMenuOpen: false });\n    }\n  };\n\n  getNavAnchorLink = item => (\n    <AnchorLink href={`#${reformatLink(item)}`} onClick={this.closeMobileMenu}>\n      {item}\n    </AnchorLink>\n  );\n\n  getNavList = ({ mobile = false }) => (\n    <NavListWrapper mobile={mobile}>\n      <Scrollspy\n        items={NAV_ITEMS.map(item => reformatLink(item))}\n        currentClassName=\"active\"\n        mobile={mobile}\n      >\n        {NAV_ITEMS.map(navItem => (\n          <NavItem key={navItem}>{this.getNavAnchorLink(navItem)}</NavItem>\n        ))}\n      </Scrollspy>\n    </NavListWrapper>\n  );\n\n  render() {\n    const { mobileMenuOpen } = this.state;\n\n    return (\n      <Nav {...this.props}>\n        <StyledContainer>\n          <Mobile>\n            <button onClick={this.toggleMobileMenu} style={{ color: 'black' }}>\n              <MenuIcon />\n            </button>\n          </Mobile>\n\n          <Mobile hide>{this.getNavList({})}</Mobile>\n        </StyledContainer>\n        <Mobile>\n          {mobileMenuOpen && (\n            <MobileMenu>\n              <Container>{this.getNavList({ mobile: true })}</Container>\n            </MobileMenu>\n          )}\n        </Mobile>\n      </Nav>\n    );\n  }\n}\n\nexport default DesignNavbar;\n","import React from 'react';\nimport { Section, Container } from '@components/global';\n\nimport '../../styles/style.css';\n\nclass EvaluationPlan extends React.Component {\n  render() {\n    return (\n      <Section id=\"evaluation-plan\">\n        <Container>\n          <div>\n            <h2>Evaluation Plan</h2>\n            <p>\n              The overall aim of the usability tests we conducted during the Peer Evaluation (with classmates) and User Evaluation (with potential users) stages were to identify any usability problems degree.ly has so that they could be addressed.\n            </p>\n            <p>\n              The tests were conducted with the following goals:\n            </p>\n            <ul>\n              <li>\n                Identify difficulties participants face when performing critical tasks such as creating a new plan (with and without a degree template), adding or removing modules from their plan, switching between different plans and modifying their degree requirements (majors, minors, specialisations/focus areas).\n              </li>\n              <li>\n                Verify if sufficient visual cues are provided to aid participants in performing frequent tasks, such as recognising that modules can be dragged and dropped from one semester to another.\n              </li>\n              <li>\n                Determine which component layouts and data formats our participants preferred the most.\n              </li>\n            </ul>\n          </div>\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default EvaluationPlan;\n","import React from 'react';\nimport ExternalLink from '@common/ExternalLink';\nimport { Section, Container } from '@components/global';\n\nimport '../../styles/style.css';\n\nclass MethodOfEvaluation extends React.Component {\n  render() {\n    return (\n      <Section id=\"method-of-evaluation\">\n        <Container>\n          <div>\n            <h2>Method of Evaluation</h2>\n            <p>\n              Our main method of evaluation was user evaluations. We conducted usability tests twice: the first round with 4 classmates taking the same module; then the second round with 4 potential users.\n            </p>\n            <p>\n              All of our participants are students from the National University of Singapore (NUS) with the following key characteristics:\n            </p>\n            <ul>\n              <li>\n                Already are planning, or have the intention to plan, their degree progress\n              </li>\n              <li>\n                Undergraduates from faculties that require students to plan their own modules (i.e. curriculum and syllabus are not pre-determined by the faculty).\n              </li>\n            </ul>\n            <p>\n              The tests required participants to perform a series of critical tasks necessary to the success of degree.ly. The nature of these tasks will be elaborated on in the later section (Test Tasks).\n            </p>\n            <p>\n              To conduct the user evaluation, we were assigned a participant each to facilitate the test for. Tests were conducted remotely via the video-conferencing platform, Zoom, and participants were required to complete tasks by interacting with our high-fidelity prototype on Figma. As facilitators, we had to record our observations as participants completed the various tasks we had prepared ahead of time. Once the tasks were completed, we asked a series of questions for participants to reflect on their experience with our prototype, and recorded those responses as well.\n            </p>\n            <h3>\n              Test Tasks\n            </h3>\n            \n            <h3>\n              Post-test Interview\n            </h3>\n            <p>\n              Once the A/B testing was completed, the facilitator asked several questions to get participants to reflect on their experience with our prototype. \n            </p>\n            <p>\n              Questions asked:\n            </p>\n            <ul>\n              <li>What worked for you during each task/screen?</li>\n              <li>What did not work for you during each task/screen?</li>\n              <li>What did you like most about each task/screen?</li>\n              <li>What did you dislike most about each task/screen?</li>\n              <li>What would you change for each task process/screen?</li>\n              <li>Overall, how would you rate your experiences with degree.ly? <i>(From 1 being strongly disagree to 5 being strongly agree)</i></li>\n              <ul>\n                <li>The website is easy to use</li>\n                <li>The dashboard was helpful for me to see an overview of my degree progress</li>\n                <li>The dashboard was helpful for me to understand what modules I have not taken but need to before graduation</li>\n                <li>I feel confident that I will know how to use the website without problems or questions</li>\n                <li>I feel that the website looks clean and pleasing</li>\n                <li>I feel that I will use this platform in the future in place of my current methods for degree planning</li>\n              </ul>\n            </ul>\n          </div>\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default MethodOfEvaluation;\n","import React from 'react';\nimport ExternalLink from '@common/ExternalLink';\nimport { Section, Container } from '@components/global';\n\nimport '../../styles/style.css';\n\nclass ResultOfEvaluation extends React.Component {\n  render() {\n    return (\n      <Section id=\"result-and-process-of-user-insight-consideration\">\n        <Container>\n          <div>\n            <h2>Method of Evaluation</h2>\n            <p>\n              Having went through two rounds of iterative designs, we present\n              the final iteration of degree.ly below:\n            </p>\n            <p>\n              Our team also made great efforts to translate the prototype design\n              into a more functional frontend implementation of our proposed\n              interactive designs available{' '}\n              <ExternalLink\n                className=\"link\"\n                href=\"https://degreely.github.io/degreely/\"\n              >\n                here\n              </ExternalLink>\n              .\n            </p>\n          </div>\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default ResultOfEvaluation;\n","import React from 'react';\nimport ExternalLink from '@common/ExternalLink';\nimport { Section, Container } from '@components/global';\n\nimport '../../styles/style.css';\n\nclass KeyChanges extends React.Component {\n  render() {\n    return (\n      <Section id=\"key-changes\">\n        <Container>\n          <div>\n            <h2>Key Changes</h2>\n            <p>\n              Having went through two rounds of iterative designs, we present\n              the final iteration of degree.ly below:\n            </p>\n            <p>\n              Our team also made great efforts to translate the prototype design\n              into a more functional frontend implementation of our proposed\n              interactive designs available{' '}\n              <ExternalLink\n                className=\"link\"\n                href=\"https://degreely.github.io/degreely/\"\n              >\n                here\n              </ExternalLink>\n              .\n            </p>\n          </div>\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default KeyChanges;\n","import React from 'react';\n\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\nimport Footer from '@sections/Footer';\n\nimport DesignNavbar from '../components/common/DesignNavbar/DesignNavbar';\nimport EvaluationPlan from '../components/sections/EvaluationPlan';\nimport MethodOfEvaluation from '../components/sections/MethodOfEvaluation';\nimport ResultOfEvaluation from '../components/sections/ResultOfEvaluation';\nimport KeyChanges from '../components/sections/KeyChanges';\n\nconst DesignEvaluation = () => (\n  <Layout>\n    <div style={{ flexDirection: 'column' }}>\n      <Navbar />\n      <DesignNavbar />\n    </div>\n    <div style={{ paddingTop: '10vh' }}>\n      <EvaluationPlan />\n      <MethodOfEvaluation />\n      <ResultOfEvaluation />\n      <KeyChanges />\n      <Footer />\n    </div>\n  </Layout>\n);\n\nexport default DesignEvaluation;\n"],"sourceRoot":""}