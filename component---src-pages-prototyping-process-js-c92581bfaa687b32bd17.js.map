{"version":3,"sources":["webpack:///./src/components/sections/Prototyping.js","webpack:///./src/pages/prototyping-process.js"],"names":["Grid","styled","div","props","inverse","theme","screen","md","Art","figure","Prototyping","query","render","data","id","fluid","art_fast","childImageSharp","art_learn","art_ideas","PrototypePage","Layout","Navbar"],"mappings":"6MAgGMA,EAAOC,IAAOC,IAAV,wEAAGD,CAAH,0SASN,SAAAE,GAAK,OACLA,EAAMC,SAAN,sEAWmB,SAAAD,GAAK,OAAIA,EAAME,MAAMC,OAAOC,MAS7C,SAAAJ,GAAK,OACLA,EAAMC,SAAN,aAEII,EAFJ,8CASAA,EAAMP,IAAOQ,OAAV,uEAAGR,CAAH,0CAMMS,EAvIK,kBAClB,kBAAC,cAAD,CACEC,MAAK,aAoCLC,OAAQ,SAAAC,GAAI,OACV,kBAAC,IAAD,CAASC,GAAG,eACV,kBAAC,IAAD,KACI,kBAACd,EAAD,KACE,6BACE,0DACA,mQAOF,kBAACQ,EAAD,KACE,kBAAC,IAAD,CAAKO,MAAOF,EAAKG,SAASC,gBAAgBF,UAG9C,kBAACf,EAAD,CAAMI,SAAO,GACX,kBAACI,EAAD,KACE,kBAAC,IAAD,CAAKO,MAAOF,EAAKK,UAAUD,gBAAgBF,SAE7C,6BACE,yDACA,6LAOJ,kBAACf,EAAD,KACE,6BACE,yDACA,sIAGE,6BACA,6BAJF,8CAQF,kBAACQ,EAAD,KACE,kBAAC,IAAD,CAAKO,MAAOF,EAAKM,UAAUF,gBAAgBF,gBCzE5CK,UAPO,kBACpB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD","file":"component---src-pages-prototyping-process-js-c92581bfaa687b32bd17.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { Section, Container } from '@components/global';\n\nconst Prototyping = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        art_fast: file(\n          sourceInstanceName: { eq: \"art\" }\n          name: { eq: \"fast\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 760) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n\n        art_learn: file(\n          sourceInstanceName: { eq: \"art\" }\n          name: { eq: \"learn_yourself\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 760) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n\n        art_ideas: file(\n          sourceInstanceName: { eq: \"art\" }\n          name: { eq: \"ideas\" }\n        ) {\n          childImageSharp {\n            fluid(maxWidth: 760) {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Section id=\"prototyping\">\n        <Container>\n            <Grid>\n              <div>\n                <h2>Speed past the competition</h2>\n                <p>\n                  Gatsby.js builds the fastest possible website. Instead of\n                  waiting to generate pages when requested, pre-build pages and\n                  lift them into a global cloud of servers — ready to be\n                  delivered instantly to your users wherever they are.\n                </p>\n              </div>\n              <Art>\n                <Img fluid={data.art_fast.childImageSharp.fluid} />\n              </Art>\n            </Grid>\n            <Grid inverse>\n              <Art>\n                <Img fluid={data.art_learn.childImageSharp.fluid} />\n              </Art>\n              <div>\n                <h2>Nothing new to learn here</h2>\n                <p>\n                  Enjoy the power of the latest web technologies – React.js ,\n                  Webpack , modern JavaScript and CSS and more — all set up and\n                  waiting for you to start building.\n                </p>\n              </div>\n            </Grid>\n            <Grid>\n              <div>\n                <h2>Grow and build your ideas</h2>\n                <p>\n                  Waste no more time on tooling and performance. Focus on the\n                  the site you want to build and nothing more.\n                  <br />\n                  <br />\n                  Gatsby is fast in every way that matters.\n                </p>\n              </div>\n              <Art>\n                <Img fluid={data.art_ideas.childImageSharp.fluid} />\n              </Art>\n            </Grid>\n          </Container>\n      </Section>\n    )}\n  />\n);\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 3fr 2fr;\n  grid-gap: 40px;\n  text-align: right;\n  align-items: center;\n  justify-items: center;\n  margin: 24px 0;\n\n  ${props =>\n    props.inverse &&\n    `\n    text-align: left;\n    grid-template-columns: 2fr 3fr;\n  `}\n\n  h2 {\n    margin-bottom: 16px;\n    font-weight: 700;\n  }\n\n  @media (max-width: ${props => props.theme.screen.md}) {\n    grid-template-columns: 1fr;\n    text-align: left;\n    margin-bottom: 96px;\n\n    &:last-child {\n      margin-bottom: 24px;\n    }\n\n    ${props =>\n      props.inverse &&\n      `\n        ${Art} {\n          order: 2;\n        }\n    `}\n  }\n`;\n\nconst Art = styled.figure`\n  margin: 0;\n  max-width: 380px;\n  width: 100%;\n`;\n\nexport default Prototyping;\n","import React from 'react';\n\nimport Layout from '@common/Layout';\nimport Navbar from '@common/Navbar';\n\nimport Prototyping from '@sections/Prototyping';\n\nconst PrototypePage = () => (\n  <Layout>\n    <Navbar />\n    <Prototyping />\n  </Layout>\n);\n\nexport default PrototypePage;\n"],"sourceRoot":""}